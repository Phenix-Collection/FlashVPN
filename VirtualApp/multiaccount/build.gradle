apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'org.greenrobot.greendao'



def releaseTime() {
    return new Date().format("MMdd", TimeZone.getTimeZone("UTC+8"))
}
android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        multiDexEnabled = true
    }

    signingConfigs {
        myConfig {
            storeFile file("..\\publish\\test.keystore")
            storePassword "123456"
            keyAlias "test.keystore"
            keyPassword "123456"
        }
    }

    flavorDimensions("arch","channel")

    productFlavors {
        arm64 {
            applicationId "com.polestar.superb.cloner.arm64"
            ndk {
                // 设置支持的SO库架构
                abiFilters 'arm64-v8a'//, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            }
            dimension "arch"
        }
        arm32 {
            applicationId "com.polestar.superb.cloner"
            ndk {
                // 设置支持的SO库架构
                abiFilters 'armeabi-v7a'//, 'x86_64', 'arm64-v8a'
            }
            dimension "arch"
        }
        develop {
            versionCode 9999
            versionName '9999'
            manifestPlaceholders = [CHANNEL_NAME_VALUE: "develop", CHANNEL_TID_VALUE: ""]
            dimension "channel"
        }
        play {
            versionCode 3145
            versionName "3.1.45.${releaseTime()}"
            manifestPlaceholders = [CHANNEL_NAME_VALUE: "play", CHANNEL_TID_VALUE: ""]
            dimension "channel"
        }
    }

    buildTypes {
        debug {
            jniDebuggable false
            pseudoLocalesEnabled true
        }
        release {
            shrinkResources true
            pseudoLocalesEnabled true
            signingConfig signingConfigs.myConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}
repositories {
    flatDir {
        dirs 'libs',project(':fuseadloader').file('libs')
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.tencent.bugly:crashreport:2.6.5'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.1.5
    //compile 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    //Android Lib
    compile 'com.android.support:appcompat-v7:25.4.0'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    compile 'com.android.support:recyclerview-v7:25.4.0'
    compile 'com.android.support:percent:25.4.0'


    compile 'com.android.support:design:25.4.0'
    compile 'org.greenrobot:greendao:3.0.1'
    //compile 'com.google.code.gson:gson:2.3.1'

    // MTA
//    compile files('libs/mid-sdk-3.5.jar')
//    compile files('libs/mta-sdk-2.2.0.jar')


    //    compile files('libs/mta-sdk-2.2.0.jar')
    //compile 'com.google.android.gms:play-services-ads:11.0.2'

    //compile 'com.google.code.gson:gson:2.3.1'
    //ad
    //firebase messaging/notifications
    compile 'com.google.firebase:firebase-core:16.0.6'
    compile 'com.google.firebase:firebase-config:16.1.2'
    compile 'com.google.firebase:firebase-ads:17.1.2'
    //compile 'com.facebook.android:audience-network-sdk:4.+'
    compile project(':libmultiple')
    compile project(':fuseadloader')
    compile project(':Booster')

    compile 'com.android.billingclient:billing:dp-1'
    implementation 'com.google.android.exoplayer:exoplayer:r2.4.4'

    //Avazu
    compile 'com.facebook.android:audience-network-sdk:4.28.2'
    compile 'com.android.support:multidex:1.0.1'

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '25.4.0'
                }
            }
        }
    }
}
apply plugin: 'com.google.gms.google-services'
