apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("MMdd", TimeZone.getTimeZone("UTC+8"))
}

def getSignInfo(propFileName) {
    def com.android.build.gradle.internal.dsl.SigningConfig signingConfig = new com.android.build.gradle.internal.dsl.SigningConfig("signInfo")
    File propFile = file(propFileName);
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        signingConfig.storeFile = file(props['STORE_FILE'])
        signingConfig.storePassword = props['STORE_PASSWORD']
        signingConfig.keyAlias = props['KEY_ALIAS']
        signingConfig.keyPassword = props['KEY_PASSWORD']
        println('signConfig is exits')
    } else {
        println('sign config is null')
        signingConfig = null
    }
    return signingConfig;
}
//buildscript {
//    repositories {
//        google()
//        mavenCentral()
//        maven {
//            url 'https://maven.google.com/'
//            name 'Google'
//        }
//      //  jcenter()
//    }
//    dependencies {
//        classpath 'com.android.tools.build:gradle:3.1.4'
//    }
//}

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "winterfell.flash.vpn"
        multiDexEnabled true
        minSdkVersion 16
        targetSdkVersion 26
//        versionCode 1203
//        versionName "1.2.03.${releaseTime()}"
    }

    signingConfigs {
        myConfig {
            storeFile file("../publish/flash-vpn.jks")
            storePassword "novateam"
            keyAlias "key0"
            keyPassword "novateam"
        }
    }

    flavorDimensions("channel")

    productFlavors {
        develop {
            versionCode 9999
            versionName '9999'
            manifestPlaceholders = [CHANNEL_NAME_VALUE: "develop", CHANNEL_TID_VALUE: ""]
            dimension "channel"
        }
        play {
            versionCode 2013
            versionName "2.0.13.${releaseTime()}"
            manifestPlaceholders = [CHANNEL_NAME_VALUE: "play", CHANNEL_TID_VALUE: ""]
            dimension "channel"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'libs', project(':fuseadloader').file('libs')
    }
    maven {
        url "https://dl.bintray.com/ironsource-mobile/android-sdk"
    }
    maven {
        //IronSource Adapters
        url "http://dl.bintray.com/ironsource-mobile/android-adapters"
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:26.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')

    testCompile 'junit:junit:4.12'

    compile 'org.bouncycastle:bcprov-jdk15on:1.57'
    compile 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.android.support:appcompat-v7:+'
    implementation 'com.android.support:multidex:1.0.1'

    implementation 'com.tencent.bugly:crashreport:2.6.5'

    implementation 'com.google.android.exoplayer:exoplayer:r2.4.4'

    compile 'com.google.firebase:firebase-core:16.0.7'
    compile 'com.google.firebase:firebase-config:16.3.0'
    compile 'com.google.firebase:firebase-ads:17.1.3'
    implementation 'com.google.firebase:firebase-messaging:17.4.0'
    api 'com.android.billingclient:billing:1.0'
    implementation 'com.facebook.android:audience-network-sdk:5.1.0'

    implementation project(':fuseadloader')

    implementation('com.mopub:mopub-sdk-banner:5.2.0@aar') {
        transitive = true
    }
    // For native static (images).
    implementation('com.mopub:mopub-sdk-native-static:5.2.0@aar') {
        transitive = true
    }
    // For native video. This will automatically also include native static
//    implementation('com.mopub:mopub-sdk-native-video:4.20.0@aar') {
//        transitive = true
//    }

    implementation 'com.ironsource.sdk:mediationsdk:6.8.1@jar'
    //Admob
    implementation 'com.ironsource.adapters:admobadapter:4.3.0@jar'
    //Applovin
    implementation 'com.ironsource.adapters:applovinadapter:4.3.1@jar'

    // For interstitials
    implementation('com.mopub:mopub-sdk-interstitial:5.2.0@aar') {
        transitive = true
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '26.1.0'
                }
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
